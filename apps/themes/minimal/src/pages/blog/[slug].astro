---
import { content } from "../../util/markdoc";
import MarkdownRenderer from "../../components/MarkdownRenderer.astro";

import BlogPostMeta from "../../components/BlogPostMeta.astro";
import ContentLayout from "../../layouts/ContentLayout.astro";

export async function getStaticPaths() {
  const { blog } = await content.glob();

  return blog.map((post) => {
    return { params: { slug: post.slug } };
  });
}

const { slug } = Astro.params;
if (typeof slug !== "string") {
  throw Error(`slug should be string. Received: ${slug}`);
}

const post = await content.globBySlug({ type: "blog", slug });

if (!post) {
  throw Error("Post not found");
}

if (post.frontmatter.type !== "blog") {
  throw Error("Type narrowing check for frontmatter. This won't happen.");
}
---

<ContentLayout title={post.frontmatter.title} date={post.frontmatter.date}>
  <BlogPostMeta
    title={post.frontmatter.title}
    description={post.frontmatter.isExternal
      ? undefined
      : post.frontmatter.description}
    publishDate={post.frontmatter.date.toISOString()}
    slot="head"
  />
  <MarkdownRenderer content={post.content} />
</ContentLayout>
